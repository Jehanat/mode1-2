package com.jwt.controller;




import java.io.IOException;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.jboss.logging.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.jwt.model.Exam;
import com.jwt.service.ExamService;
@Controller
public class ExamController {
	

		private static final Logger logger = Logger
				.getLogger(ExamController.class);

		public ExamController() {
			System.out.println("ExamController()");
		}

		@Autowired
		private ExamService ExamService;

		@RequestMapping(value = "/")
		public ModelAndView listExam(ModelAndView model) throws IOException {
			logger.debug("debug:" +new Date() +this.getClass()+"listExam()" +"entering into");

			List<Exam> listExam = ExamService.getAllExam();
			logger.debug("debug:" +new Date() +this.getClass()+"listExam()" +"Calling the student service");

			model.addObject("listExam", listExam);
			logger.debug("debug:" +new Date() +this.getClass()+"listExam()" +"student service calling is completed and no of students");

			model.setViewName("home");
			logger.debug("debug:" +new Date() +this.getClass()+"listExam()" +"redirect to home");

			return model;
		}

		@RequestMapping(value = "/newExam", method = RequestMethod.GET)
		public ModelAndView newContact(ModelAndView model) {
			logger.debug("debug:" +new Date() +this.getClass()+"listExam()" +"entering into");

			Exam exam = new Exam();
			logger.debug("debug:" +new Date() +this.getClass()+"listExam()" +"Calling the student service");

			model.addObject("exam", exam);
			logger.debug("debug:" +new Date() +this.getClass()+"listExam()" +"student service calling is completed and no of students");

			model.setViewName("Exam");
			logger.debug("debug:" +new Date() +this.getClass()+"listExam()" +"redirect to home");

			return model;
		}
		
		
		
		@RequestMapping(value = "/saveExam", method = RequestMethod.POST)
		public ModelAndView saveExamS(@ModelAttribute Exam exam) {
			if (exam.getId() == 0) { // if employee id is 0 then creating the
				// employee other updating the employee
				ExamService.addExam(exam);
			} else {
				ExamService.updateExam(exam);
			}
			return new ModelAndView("redirect:/");
		}

		@RequestMapping(value = "/deleteExam", method = RequestMethod.GET)
		public ModelAndView deleteExam(HttpServletRequest request) {
			int examId = Integer.parseInt(request.getParameter("examId"));
			ExamService.deleteExam(examId);
			return new ModelAndView("redirect:/");
		}

		@RequestMapping(value = "/editExam", method = RequestMethod.GET)
		public ModelAndView editContact(HttpServletRequest request) {
			int examid = Integer.parseInt(request.getParameter("examId"));
			Exam exam = ExamService.getExam(examid);
			ModelAndView model = new ModelAndView("ExamForm");
			model.addObject("exam", exam);

			return model;
		}
}
